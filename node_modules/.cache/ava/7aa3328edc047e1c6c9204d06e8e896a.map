{"version":3,"sources":["test.js"],"names":[],"mappings":";;AAAA;;;;;;AACA,IAAM,SAAS,QAAQ,YAAR,CAAT;;AAEN,mBAAK,aAAK;AACN,QAAI,OAAO,mBAAP,CADE;AAEN,QAAI,OAAO,qBAAP,CAFE;;AAIN,QAAI,IAAJ,EAAU;AACN,gBAAQ,GAAR,CAAY,mBAAZ,EAAiC,IAAjC,EADM;AAEN,eAAO,EAAE,IAAF,EAAP,CAFM;KAAV;AAIA,QAAI,CAAC,IAAD,EAAO;AACP,gBAAQ,GAAR,CAAY,qBAAZ,EAAmC,IAAnC,EADO;AAEP,eAAO,EAAE,IAAF,EAAP,CAFO;KAAX;;AAKA,MAAE,IAAF,GAbM;CAAL,CAAL;;AAgBA,SAAS,iBAAT,GAA6B;AACzB,QAAI,QAAQ,OAAO,EAAP,CAAR,CADqB;AAEzB,QAAI,OAAO,MAAM,MAAN,CAAa;AACpB,WAAG,KAAH;AACA,YAAI,OAAJ;AACA,WAAG;AACC,gBAAI,OAAJ;AACA,eAAG;AACC,mBAAG,KAAH;AACA,mBAAG,UAAH;aAFJ;SAFJ;KAHO,CAAP,CAFqB;AAazB,WAAO,KAAK;AACR,cAAM;AACF,eAAG,EAAH;AACA,eAAG,IAAH;AACA,eAAG;AACC,mBAAG;AACC,uBAAG,MAAH;AACA,uBAAG,KAAK,GAAL,EAAH;iBAFJ;aADJ;SAHJ;KADG,EAWJ,IAXI,EAWE,QAAQ,GAAR,CAXT,CAbyB;CAA7B;AA0BA,SAAS,mBAAT,GAA+B;AAC3B,QAAI,QAAQ,OAAO,EAAE,SAAS,0BAAW;AAAE,mBAAO,uBAAP,CAAF;SAAX,EAAlB,CAAR,CADuB;AAE3B,QAAI,OAAO,MAAM,MAAN,CAAa;AACpB,WAAG,KAAH;AACA,YAAI,OAAJ;AACA,WAAG;AACC,gBAAI,OAAJ;AACA,eAAG;AACC,mBAAG,KAAH;AACA,mBAAG,UAAH;aAFJ;SAFJ;KAHO,CAAP,CAFuB;AAa3B,WAAO,KAAK;AACR,cAAM;AACF,eAAG,EAAH;AACA,eAAG,IAAH;AACA,eAAG;AACC,mBAAG;AACC,uBAAG,MAAH;AACA,uBAAG,KAAK,GAAL,EAAH;iBAFJ;AAIA,mBAAG,CAAH;aALJ;SAHJ;KADG,EAYJ,IAZI,EAYE,QAAQ,GAAR,CAZT,CAb2B;CAA/B","file":"test.js","sourcesContent":["import test from 'ava'\r\nconst _Needs = require('./index.js')\r\n\r\ntest(t => {\r\n    let err1 = testStrictCorrect()\r\n    let err2 = testStrictIncorrect()\r\n    \r\n    if (err1) {\r\n        console.log('testStrictCorrect', err1)\r\n        return t.fail()\r\n    }\r\n    if (!err2) {\r\n        console.log('testStrictIncorrect', err1)\r\n        return t.fail()\r\n    }\r\n    \r\n    t.pass()\r\n})\r\n\r\nfunction testStrictCorrect() {\r\n    let needs = _Needs({})\r\n    let test = needs.params({\r\n        a: 'int',\r\n        b_: 'float',\r\n        c: {\r\n            d_: 'int[]',\r\n            e: {\r\n                f: 'str',\r\n                g: 'datetime'\r\n            }\r\n        }\r\n    })\r\n    return test({\r\n        body: {\r\n            a: 42,\r\n            b: 3.14,\r\n            c: {\r\n                e: {\r\n                    f: 'test',\r\n                    g: Date.now()\r\n                }\r\n            }\r\n        }\r\n    }, null, console.log)\r\n}\r\nfunction testStrictIncorrect() {\r\n    let needs = _Needs({ onError: options => { return 'Successful Error Test' } })\r\n    let test = needs.params({\r\n        a: 'int',\r\n        b_: 'float',\r\n        c: {\r\n            d_: 'int[]',\r\n            e: {\r\n                f: 'str',\r\n                g: 'datetime'\r\n            }\r\n        }\r\n    })\r\n    return test({\r\n        body: {\r\n            a: 42,\r\n            b: 3.14,\r\n            c: {\r\n                e: {\r\n                    f: 'test',\r\n                    g: Date.now()\r\n                },\r\n                f: 1\r\n            }\r\n        }\r\n    }, null, console.log)\r\n}"]}